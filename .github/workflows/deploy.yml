name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: rkishorekumar/budgetbuddy:latest
          no-cache: true   # âœ… ensures no old layers are reused

      # Step 5: Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Create budget-buddy directory if it doesn't exist
            mkdir -p /home/ubuntu/budget-buddy
            
            # Stop old services if they exist
            if [ -d "/home/ubuntu/sms-forwarder" ]; then
              cd /home/ubuntu/sms-forwarder
              docker-compose -f docker-compose-sms.yml down || true
            fi
            
            # Switch to budget-buddy directory
            cd /home/ubuntu/budget-buddy
            
            # Download the new docker-compose file
            curl -o docker-compose-budget-buddy.yml https://raw.githubusercontent.com/rkishorekumar/budget-buddy/main/docker-compose-budget-buddy.yml
            
            # Pull and start services
            docker image rm rkishorekumar/budgetbuddy:latest || true
            docker pull rkishorekumar/budgetbuddy:latest
            docker-compose -f docker-compose-budget-buddy.yml up -d
